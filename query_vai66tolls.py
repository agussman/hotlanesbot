#!/usr/bin/env python
# -*- coding: utf-8 -*-

import requests


URL = "https://vai66tolls.com/"



def main():
    print "HERE WE GO!"

    headers = {
        "authority": "vai66tolls.com",
        "scheme": "https",
        "accept": "*/*",
        "accept-encoding": "gzip, deflate, br",
        "accept-language": "en-US,en;q=0.9",
        "cache-control": "no-cache",
        "content-length": "5731",
        "content-type": "application/x-www-form-urlencoded; charset=UTF-8",
        "cookie": "ASP.NET_SessionId=up5ygvcjzjalnw2z1r1e0qeg",
        "origin": "https://vai66tolls.com",
        "pragma": "no-cache",
        "referer": "https://vai66tolls.com/",
        "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36",
        "x-microsoftajax": "Delta=true",
        "x-requested-with": "XMLHttpRequest"
    }

    payload = {
  "sm1": "sm1%7CbtnUpdateEndSel",
  "txtProjectionsEast": "%7B%22data%22%3A%7B%221%22%3A%7B%22x%22%3A72.59275022218935%2C%22y%22%3A507.1073907732498%2C%22hash%22%3A-924004836%7D%2C%222%22%3A%7B%22x%22%3A151.12526720005553%2C%22y%22%3A472.97412396094296%2C%22hash%22%3A1753858769%7D%2C%223%22%3A%7B%22x%22%3A130.62560640019365%2C%22y%22%3A484.4094988727011%2C%22hash%22%3A172829413%7D%2C%224%22%3A%7B%22x%22%3A319.9401777777821%2C%22y%22%3A371.0102966551203%2C%22hash%22%3A750498074%7D%2C%225%22%3A%7B%22x%22%3A196.9247367110802%2C%22y%22%3A144.3040254295338%2C%22hash%22%3A1022995839%7D%2C%226%22%3A%7B%22x%22%3A348.2517297777813%2C%22y%22%3A376.95367120276205%2C%22hash%22%3A-754168337%7D%2C%227%22%3A%7B%22x%22%3A233.83461191132665%2C%22y%22%3A159.02639861032367%2C%22hash%22%3A82753581%7D%2C%228%22%3A%7B%22x%22%3A532.1603093333542%2C%22y%22%3A493.26276484993286%2C%22hash%22%3A228155854%7D%2C%229%22%3A%7B%22x%22%3A745.5746524446877%2C%22y%22%3A466.82226947823074%2C%22hash%22%3A1006370368%7D%7D%7D",
  "txtProjectionsWest": "%7B%22data%22%3A%7B%224%22%3A%7B%22x%22%3A273.6397219556384%2C%22y%22%3A378.9821881093085%2C%22hash%22%3A-223921119%7D%2C%2211%22%3A%7B%22x%22%3A450.3364287998993%2C%22y%22%3A435.350902762264%2C%22hash%22%3A-138389322%7D%2C%2212%22%3A%7B%22x%22%3A694.0138403554447%2C%22y%22%3A517.4868819864932%2C%22hash%22%3A1112146227%7D%2C%2213%22%3A%7B%22x%22%3A831.2607879112475%2C%22y%22%3A422.5148401792394%2C%22hash%22%3A-2074711502%7D%2C%2215%22%3A%7B%22x%22%3A1020.6685660445364%2C%22y%22%3A404.6635906677693%2C%22hash%22%3A-414990012%7D%2C%2216%22%3A%7B%22x%22%3A1094.7562858667225%2C%22y%22%3A426.1448951404309%2C%22hash%22%3A-337587764%7D%2C%2217%22%3A%7B%22x%22%3A924.8112433778588%2C%22y%22%3A393.69806051591877%2C%22hash%22%3A-1568430654%7D%7D%7D",
  "txtProjectionsExits": "%7B%22data%22%3A%7B%221%22%3A%7B%22x%22%3A71.70728604472242%2C%22y%22%3A505.2439999540802%2C%22hash%22%3A-1582594562%7D%2C%224%22%3A%7B%22x%22%3A290.25965155567974%2C%22y%22%3A368.442798177246%2C%22hash%22%3A2116900292%7D%2C%225%22%3A%7B%22x%22%3A177.8930823111441%2C%22y%22%3A450.0577305065235%2C%22hash%22%3A-31229911%7D%2C%226%22%3A%7B%22x%22%3A354.1645333333872%2C%22y%22%3A375%2C%22hash%22%3A-612407673%7D%2C%228%22%3A%7B%22x%22%3A535.5215779556893%2C%22y%22%3A490.9877215634333%2C%22hash%22%3A916792536%7D%2C%229%22%3A%7B%22x%22%3A752.6700167113449%2C%22y%22%3A462.11478044162504%2C%22hash%22%3A959379390%7D%2C%2210%22%3A%7B%22x%22%3A442.1633614222519%2C%22y%22%3A432.25231311819516%2C%22hash%22%3A-82483650%7D%2C%2211%22%3A%7B%22x%22%3A460.13478897779714%2C%22y%22%3A451.01571840327233%2C%22hash%22%3A2123083794%7D%2C%2212%22%3A%7B%22x%22%3A698.6858289778465%2C%22y%22%3A517.3521818842273%2C%22hash%22%3A1165055615%7D%2C%2213%22%3A%7B%22x%22%3A831.6685674667824%2C%22y%22%3A426.79605701658875%2C%22hash%22%3A1830473341%7D%2C%2214%22%3A%7B%22x%22%3A922.7257422222756%2C%22y%22%3A394.40165763814%2C%22hash%22%3A718080043%7D%2C%2215%22%3A%7B%22x%22%3A1023.7152618666878%2C%22y%22%3A421.27986737631727%2C%22hash%22%3A-668718683%7D%2C%2216%22%3A%7B%22x%22%3A1095.4203840000555%2C%22y%22%3A427.67175621306524%2C%22hash%22%3A-872142550%7D%7D%7D",
  "txtRunRefresh": "",
  "txtCurrentDate": "01%2F02%2F2018",
  "txtCurrentTime": "11%3A34%20PM",
  "txtCurrentDateUnix": "1514954115942",
  "ddlExitAfterSel": "9",
  "datepicker": "01%2F02%2F2018",
  "timepicker": "6%20%3A%2055%20pm",
  "ddlEntryInterch": "16",
  "ddlExitInterch": "1",
  "__EVENTTARGET": "",
  "__EVENTARGUMENT": "",
  "__LASTFOCUS": "",
  "__VIEWSTATE": "wVoPir30BzCX0Axa3J6aG1adRInDeDuiYUXeFtmYJXPe0tgh02fdbT54QL/kKJNs0Y23nSslQYP0LdgR/PrGVMVnY/VBaf2LCSXWRfnFryAvDJo3isF6eTst9VrXT+SNDvDAXeKg/nTRbmDiwWqTSy6h6VCLUw4KI3unLSWir5KaxjNh7aB/Vpy3TUCatWAbS7sJL3SlmlP8ViheN51Znac5SovSa3okZ2i4qFQPd/+zKYVF8enX5Pd7KJWxweMRy7VyJCmw86uxZxOlyxr4AnGzZzUD0yLQMvWtXm1SXPE5DqAADBjJxbojHxGB/XT3HtRkBj0tV+tnUUeQD1o9VITjPI0Qw/BFRAtO5RIauEbLdpbxKd8/WlWeBnDRHrzx82w2bFgZFPTvGyTBsy13vNgNqy5XufQHEA96Hl9knye5b3PvH5pOpITKbWw9wBa8UquEcsG5VvCpHd3NTN5AoRb6Jg5fH9qazngSse1wc2PLLEBl4zW9XM3VeG7q9SQfsst5eT1YogtP9ovSAiid2bhCda9V/Ilt6VGvHPq8eIZbwO099t2iIL39vSGxdcROu48DKNz/uiMTz+jVsTABZVIO1kmnYws8UlDu2+Ik4EJRoA4GWhAyyyfWD3QLRQDH3EYWx8wUonaFvS0XTPlb+qtpzfL3P+TWgE75iSc92dYghPNwVxSgBytZTzjh0Nm0otZOnh9sHI0lqgSM8Xemv6yrodr0QZ4osUvDTT117/6eYK8SaA9l6ItFs1DZM7hgfmTWZx+pEs2hxM0xA8ClmORcKqKNGwvGtpibjMgBvnqdh7mGyvCM3X0iKHSonVuhA/FEgFbDMZtamceLthWl0anbsVVX5KTXBSpCr95ndI6eMNf8muOvHEjpVYwO481QJjNxhQCR81aMtuur+VBiNHXK1qUj7UNEmpQCiX/h2gEi5tto6g6KVdzRU5LpcunoaZSN4qm0vJK0ERCy5MD0B5QIqfSkLXHRTp3ScCPlCVGOCHQvXW9FcIPofbcL2VrNbSupgkzThShk2DJMSfqocn0hfnohFJozBh9f332iEjN41vVRojGDis7gowWvV95r/rtM9E50oTcfZ31GHE+LEAXSOrA2MLd5dQIoQ4iU3+JWbMfoJcN4yfK1mwIduF1SyKzx7EXJwN4OsJUlWK3VOX2OqqUr2t4vOUxHie3rXKH4oAvBTGlF/tob0cL5bNrrEurrrLN1CFa6TrARgklEtQ==",
  "__VIEWSTATEGENERATOR": "CA0B0334",
  "__EVENTVALIDATION": "VwlwSp6QlUHuQ9NHKpN+bPx9nOlCgyJ6OLsr9UnNLoAa+mJI0+23NMYQsrf3OkyTymgDNN4bxEjFT77FyorfkxZxwwzSR/iytm06PHv59Jhuq6bzRtl1SsNcsSWo14b6e3A+EvdqJdMolNVUr46/OUsiWexyZFUGhS313pr39EXmjkoozC2Z8JwrklKCxz/IPvCsj1Z1sw0Fo/k5chbRa+a9AHOFgdm1Tn+f+nblJtZ6atoW3SBYtKMK3y9MU1jzkicFa7R4anAH3ENUGj/sHSwab30vKL0Qewyl0+O4JwlkMDP0bQHuFuuWaFa6MXzcxQa3VvATCdiCHcVkMBeZhnq9+3QJ4qIR3w7SNq62VFrq+bW8hGnJYdHPqr3J2AEAcHhRJPFW81PFAAi4pfExlq5B8/T32+2fL6cbTpxKs5+yP8VHCffjaV0aaLGTuHXw7K5YuK38v6RswkwgxYSSXJKTb/OQ2VMMFrpGmg7/hRk5FrvnaN6DU3zlt4kefiwOd7/nYkyFR41Uaj56IwRgkXEGui2ePmijcDaOoGZOQkoiK3pTkecPx1TJStno6Du3KZp7xyD5AGTtDop5uWn1b4nLn2liEz3pvdwKDJQn57jfqEKJ3VHngJ0B85Xy3Xh8k2GVaYQ8/8UutF4Q4aWtCSsoOGUxp/2ZdbGLDpA0GMwtNxL8ZLtPHQJZWTB1ExQAmLVKXDZNgozcbFpuj340bMvg6w25cEqIta4aKOwsKeGE3w9cYDTpBvqdcM/y7yMsFdJyNVUtIE2dTKozUnQklofeEsmsViTA9LEECbROJsRvuVfOzKfGmLXxZCIx3F7EFdMOqN/v2c9yeR3UgCuV3cD6YTU29viqdIZAaXIczcg=",
  "__ASYNCPOST": "true",
  "btnUpdateEndSel": "Select%20this%20Exit"
}

    resp = requests.post(url=URL, headers=headers, params=payload)
    print "%s \n\n %s \n\n %s" % (resp.status_code, resp.url, resp.content)






if __name__ == "__main__":
    main()


